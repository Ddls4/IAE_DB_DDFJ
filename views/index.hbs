<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="menu.css">
    <link rel="stylesheet" href="nav.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
    {{> nav}}
    {{> menu_tablas}}

    <script>
        function generateColumnInputs() {
            const numColumns = document.getElementById('numColumns').value;
            const columnNamesDiv = document.getElementById('columnNames');
            columnNamesDiv.innerHTML = ''; // Limpiar entradas previas

            for (let i = 1; i <= numColumns; i++) {
                const input = document.createElement('input');
                input.type = 'text';
                input.placeholder = `Nombre de la columna ${i}`;
                input.id = `columnName${i}`;
                columnNamesDiv.appendChild(input);
            }
        }

        function createTable() {
            const numColumns = document.getElementById('numColumns').value;
            const tableContainer = document.getElementById('tableContainer');
            tableContainer.innerHTML = ''; // Limpiar tabla previa

            const table = document.createElement('table');
            table.id = 'dynamicTable'; // Asignar un ID para referencia
            const headerRow = document.createElement('tr');

            for (let i = 1; i <= numColumns; i++) {
                const th = document.createElement('th');
                const columnName = document.getElementById(`columnName${i}`).value || `Columna ${i}`;
                th.textContent = columnName;
                headerRow.appendChild(th);
            }

            table.appendChild(headerRow);
            tableContainer.appendChild(table);

            generateRowInputs(numColumns);
            document.getElementById('rowData').style.display = 'block';
        }

        function generateRowInputs(numColumns) {
            const rowInputsDiv = document.getElementById('rowInputs');
            rowInputsDiv.innerHTML = ''; // Limpiar entradas previas

            for (let i = 1; i <= numColumns; i++) {
                const input = document.createElement('input');
                input.type = 'text';
                input.placeholder = `Dato para Columna ${i}`;
                input.id = `rowData${i}`;
                rowInputsDiv.appendChild(input);
            }
        }

        function addRow() {
            const table = document.getElementById('dynamicTable');
            const newRow = document.createElement('tr');
            const numColumns = document.getElementById('numColumns').value;

            for (let i = 1; i <= numColumns; i++) {
                const td = document.createElement('td');
                const cellData = document.getElementById(`rowData${i}`).value || '';
                td.textContent = cellData;
                newRow.appendChild(td);
            }

            table.appendChild(newRow);
        }
    </script>

    <script>
        // variables para agarrar la primera fila tr fila | th nombre
        let numColumnasInput = document.getElementById('num-columnas');
        let nombresColumnasDiv = document.getElementById('nombres-columnas');
        let contenedorColumnas = document.getElementById('Tabla-columnas');
        const columnaSeleccionada = document.getElementById('columna-seleccionada');
        const contenidoFilaInput = document.getElementById('contenido-fila');
        document.getElementById('generar-columnas').addEventListener('click', () => {
            const numColumnas = parseInt(numColumnasInput.value);
            // Vaciar los inputs de nombres previos
            nombresColumnasDiv.innerHTML = '';
            columnaSeleccionada.innerHTML = '';
            for (let i = 0; i < numColumnas; i++) {
                // Crear inputs para nombres
                const input = document.createElement('input');
                input.type = 'text';
                input.name = `nombre-columna-${i + 1}`;
                input.placeholder = `Nombre de la columna ${i + 1}`;
                nombresColumnasDiv.appendChild(input);
                nombresColumnasDiv.appendChild(document.createElement('br'));

                // Crear opciones para el selector de columnas
                const option = document.createElement('option');
                option.value = i;
                option.textContent = `Columna ${i + 1}`;
                columnaSeleccionada.appendChild(option);
            }
        });
        document.getElementById('aplicar-nombres').addEventListener('click', () => {
            contenedorColumnas.innerHTML = ''; // Limpiar contenedor de columnas
            const nombresInputs = nombresColumnasDiv.querySelectorAll('input');
            nombresInputs.forEach((input, index) => {
                const div = document.createElement('th');
                div.className = 'columna';
                div.dataset.index = index;
                div.innerHTML = `<th>${input.value || `Columna ${index + 1}`}</th>`;
                contenedorColumnas.appendChild(div);

                // Actualizar opciones del selector con los nombres
                columnaSeleccionada.options[index].textContent = input.value || `Columna ${index + 1}`;
            });
        });
    </script>
    

    
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
</body>
</html>